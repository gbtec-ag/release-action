name: "Release project"
inputs:
  repository:
    description: 'Repository to release'
    required: true
  source-branch:
    description: 'Source branch to release'
    required: true
  gh-runner-token:
    description: 'Token to clone GitHub repositories'
    required: true
  github-token:
    description: 'Automatic GitHub Workflow token'
    required: true
  maven-repository-user:
    description: 'User to access maven-repository artifacts'
    required: false
  maven-repository-token:
    description: 'Token to access maven-repository artifacts'
    required: false
  maven-repository-url:
    description: 'Url to access maven-repository artifacts'
    required: false
  jira-user:
    description: 'User to access Jira API'
    required: true
  jira-token:
    description: 'Token to access Jira API'
    required: true
  slack-token:
    description: 'Token to access Slack API'
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Python
      uses: actions/setup-python@v4.2.0
      with:
        python-version: '3.10'

    - name: Checkout git-repository-runner
      uses: actions/checkout@v3.0.2
      with: 
        token: ${{ inputs.gh-runner-token }}
        repository: gbtec-ag/git-repository-runner
        # FIXME: we want to change that to master later
        ref: refs/heads/feat/DES-2160
        path: git-repository-runner

    - name: Install dependencies
      run: |
        cd git-repository-runner
        pip install -r requirements.txt
      shell: bash

    - name: Create Maven settings
      uses: whelk-io/maven-settings-xml-action@v21
      with:
        # We need the indirection of the environment vars so that the credentials never get written to settings.xml on harddisk.
        servers: '[{ "id": "central", "username": "${env.MAVEN_REPOSITORY_USER}", "password": "${env.MAVEN_REPOSITORY_TOKEN}" }]'
        mirrors: '[{ "id": "central", "mirrorOf": "central", "url": "${env.MAVEN_REPOSITORY_URL}" }]'
        repositories: '[{ "id": "central",  "url": "${env.MAVEN_REPOSITORY_URL}", "snapshots": { "enabled": "true" } }]'

    # Note: GITHUB_TOKEN is already reserved by GitHub Actions.
    # GITHUB_TOKEN accesses inputs.repository only (the one starting the GitHub Action Workflow).
    # Therefore, GH_RUNNER_TOKEN is used to access other repositories.
    # Remember to give appropriate rights to the user hosting the GH_RUNNER_TOKEN.
    - name: Run release workflow
      run: |
        export REPO_HELPER_BASEDIR="${GITHUB_WORKSPACE}"
        export REPO_HELPER_SERVICES="${{ inputs.repository }}"
        export GH_RUNNER_TOKEN="${{ inputs.gh-runner-token }}"
        export GITHUB_TOKEN="${{ inputs.github-token }}"
        export JIRA_USER="${{ inputs.jira-user }}"
        export JIRA_TOKEN="${{ inputs.jira-token }}"
        export MAVEN_REPOSITORY_USER="${{ inputs.maven-repository-user }}"
        export MAVEN_REPOSITORY_TOKEN="${{ inputs.maven-repository-token }}"
        export MAVEN_REPOSITORY_URL="${{ inputs.maven-repository-url }}"
        export SLACK_TOKEN="${{ inputs.slack-token }}"
        ./git-repository-runner/runner.py CreateRelease "${{ inputs.source-branch }}"
      shell: bash
